{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Final YTChannel Scraper","provenance":[{"file_id":"1Ac3FKI-fEHxGoeFIHCiPfLJuwFk0rppL","timestamp":1646136864150},{"file_id":"1lWIELTK14tmW5oGYySLnsCVl9WeXv6Z3","timestamp":1636377255465}],"collapsed_sections":["KaI3qwKUmbpt","7Mp-6DrNm_oH"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["channel_url = 'https://www.youtube.com/c/fitnessblender' #@param {type:\"string\"}\n","channel_name = 'FitnessBlender' #@param {type:\"string\"}"],"metadata":{"cellView":"form","id":"SGFpdEr3Z-ws"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"KaI3qwKUmbpt"},"source":["# Necessary installations"]},{"cell_type":"code","metadata":{"id":"3CrvHzfomSI-"},"source":["%%capture\n","\n","!pip install selenium\n","!pip install requests_html\n","!apt-get update\n","!apt install chromium-chromedriver\n","\n","from bs4 import BeautifulSoup as bs\n","import sys\n","import pandas as pd\n","from selenium import webdriver\n","from requests_html import HTMLSession\n","\n","import time\n","from selenium.webdriver import Chrome\n","from selenium.webdriver.common.by import By\n","from selenium.webdriver.common.keys import Keys\n","from selenium.webdriver.support.ui import WebDriverWait\n","from selenium.webdriver.support import expected_conditions as EC\n","\n","\n","from selenium.common.exceptions import TimeoutException\n","from selenium.webdriver.support.ui import WebDriverWait\n","from selenium.webdriver.common.keys import Keys\n","from selenium.webdriver.support import expected_conditions as EC\n","from selenium.webdriver.common.by import By\n","import time\n","import datetime\n","from datetime import date\n","\n","\n","sys.path.insert(0,'/usr/lib/chromium-browser/chromedriver')\n","chrome_options = webdriver.ChromeOptions()\n","chrome_options.add_argument('--headless') # don't need a visible UI shell\n","chrome_options.add_argument('--no-sandbox') # required when headless\n","chrome_options.add_argument('--disable-dev-shm-usage') # prevent crashes "],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7Mp-6DrNm_oH"},"source":["# Step 1 : Extracting links of each video\n","\n"]},{"cell_type":"code","metadata":{"id":"JI4sQFWhnDoY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1652390298620,"user_tz":-330,"elapsed":190217,"user":{"displayName":"Isha","userId":"08045007537710183397"}},"outputId":"e65e7386-d2ac-4682-b5a4-715694b98e62"},"source":["driver=webdriver.Chrome('chromedriver',options=chrome_options)\n","\n","wait = WebDriverWait(driver,100)\n","driver.get('{}/videos'.format(channel_url))\n","SCROLL_PAUSE_TIME = 5\n","CYCLES = 25\n","\n","html = driver.find_element_by_tag_name('html')\n","html.send_keys(Keys.PAGE_DOWN)   \n","html.send_keys(Keys.PAGE_DOWN)   \n","time.sleep(SCROLL_PAUSE_TIME * 3)\n","for i in range(CYCLES):\n","  html.send_keys(Keys.END)\n","  time.sleep(SCROLL_PAUSE_TIME)\n","\n","content = driver.page_source.encode('utf-8').strip()\n","soup = bs(content, 'lxml')\n","video_urls = soup.findAll('a', id='video-title')\n","video_links = []\n","\n","for j in range(len(video_urls)):\n","  video_links.append(\"https://www.youtube.com\" + f\"{video_urls[j].get('href')}\")\n","\n","print(len(video_links))\n","print(video_links[-1:])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:8: DeprecationWarning: find_element_by_tag_name is deprecated. Please use find_element(by=By.TAG_NAME, value=name) instead\n","  \n"]},{"output_type":"stream","name":"stdout","text":["780\n","['https://www.youtube.com/watch?v=_Ov-lSkpOyI']\n"]}]},{"cell_type":"markdown","metadata":{"id":"_BEVjXEEnyBx"},"source":["# Step 2 : Extract useful info from every video link"]},{"cell_type":"code","metadata":{"id":"k1vqbtc_sD5w","colab":{"base_uri":"https://localhost:8080/","height":321},"executionInfo":{"status":"error","timestamp":1652390394710,"user_tz":-330,"elapsed":96103,"user":{"displayName":"Isha","userId":"08045007537710183397"}},"outputId":"a20920ef-5c03-4d5c-ca1e-57799adfa59c"},"source":["def getLikes(script_soup):\n","  likes_loc = script_soup.find('likes')\n","  likes_str = script_soup[likes_loc-12:likes_loc]\n","  #print(likes_str)\n","  try:\n","    likesss = int(float(likes_str.split('\"')[-1].replace(\",\",\"\")))\n","  except:\n","    likesss = -1\n","  finally:\n","    return likesss\n","\n","def getInfo(response):\n","  soup = bs(response.html.html, \"html.parser\")\n","  title = soup.find(\"meta\", itemprop=\"name\")[\"content\"]\n","  n_view = soup.find(\"meta\", itemprop=\"interactionCount\")['content']\n","  date = soup.find(\"meta\", itemprop=\"datePublished\")['content']\n","  tags = ', '.join([ meta.attrs.get(\"content\") for meta in soup.find_all(\"meta\", {\"property\": \"og:video:tag\"}) ])\n","  duration = str(soup.find(\"meta\", itemprop=\"duration\")['content'][2:]).replace('M',':').replace('S','')\n","  x = soup.find_all(\"script\")\n","  likes = getLikes(str(x))\n","  return [title,n_view,date,tags,duration,likes]\n","\n","data = []\n","session = HTMLSession()\n","for url in video_links:\n","  response = session.get(url)\n","  data.append(getInfo(response))"],"execution_count":null,"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-4-a105ec6999be>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     25\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0murl\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mvideo_links\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     26\u001b[0m   \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msession\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 27\u001b[0;31m   \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgetInfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-4-a105ec6999be>\u001b[0m in \u001b[0;36mgetInfo\u001b[0;34m(response)\u001b[0m\n\u001b[1;32m     12\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mgetInfo\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m   \u001b[0msoup\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbs\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresponse\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhtml\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhtml\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"html.parser\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 14\u001b[0;31m   \u001b[0mtitle\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msoup\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"meta\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mitemprop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"name\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"content\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     15\u001b[0m   \u001b[0mn_view\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msoup\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"meta\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mitemprop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"interactionCount\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'content'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m   \u001b[0mdate\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msoup\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfind\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"meta\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mitemprop\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"datePublished\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'content'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: 'NoneType' object is not subscriptable"]}]},{"cell_type":"code","source":["df = pd.DataFrame(data,columns =['title','views','release_date','tags','duration','Likes'])\n","print(\"Shape of Data: \",df.shape)\n","df.head()"],"metadata":{"id":"hTrqh1r6bIhq","executionInfo":{"status":"ok","timestamp":1652390432720,"user_tz":-330,"elapsed":440,"user":{"displayName":"Isha","userId":"08045007537710183397"}},"colab":{"base_uri":"https://localhost:8080/","height":224},"outputId":"96b7640c-8db2-42dd-8ee0-d2e9d36ebae3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape of Data:  (177, 6)\n"]},{"output_type":"execute_result","data":{"text/plain":["                                               title  views release_date  \\\n","0  FB Plus Sale + New 4 Week FB Benchmark â€“ Total...   8090   2022-05-01   \n","1  Lower Body Strength Workout with Glute Activat...  43175   2022-04-25   \n","2  Bodyweight Strength with HIIT Burnout Sets - T...  57174   2022-04-11   \n","3  Lower and Upper Body Mini Strength Complexes w...  39055   2022-03-28   \n","4  Express Total Body Workout: 10 or 15 Minutes Y...  62204   2022-03-07   \n","\n","                                                tags duration  Likes  \n","0                                                       10:43    186  \n","1                                                       26:51   1492  \n","2                                                       32:16   1336  \n","3                                                       32:43     -1  \n","4  express workout, quick workout, 10 minute work...    15:10   1869  "],"text/html":["\n","  <div id=\"df-3ce2ad58-a610-4087-a16b-955ecd3444e5\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>views</th>\n","      <th>release_date</th>\n","      <th>tags</th>\n","      <th>duration</th>\n","      <th>Likes</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>FB Plus Sale + New 4 Week FB Benchmark â€“ Total...</td>\n","      <td>8090</td>\n","      <td>2022-05-01</td>\n","      <td></td>\n","      <td>10:43</td>\n","      <td>186</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lower Body Strength Workout with Glute Activat...</td>\n","      <td>43175</td>\n","      <td>2022-04-25</td>\n","      <td></td>\n","      <td>26:51</td>\n","      <td>1492</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bodyweight Strength with HIIT Burnout Sets - T...</td>\n","      <td>57174</td>\n","      <td>2022-04-11</td>\n","      <td></td>\n","      <td>32:16</td>\n","      <td>1336</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Lower and Upper Body Mini Strength Complexes w...</td>\n","      <td>39055</td>\n","      <td>2022-03-28</td>\n","      <td></td>\n","      <td>32:43</td>\n","      <td>-1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Express Total Body Workout: 10 or 15 Minutes Y...</td>\n","      <td>62204</td>\n","      <td>2022-03-07</td>\n","      <td>express workout, quick workout, 10 minute work...</td>\n","      <td>15:10</td>\n","      <td>1869</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ce2ad58-a610-4087-a16b-955ecd3444e5')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3ce2ad58-a610-4087-a16b-955ecd3444e5 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3ce2ad58-a610-4087-a16b-955ecd3444e5');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["x = datetime.date.today()\n","dates = df['release_date']\n","age = []\n","for date in dates:\n","  datetime_object = datetime.datetime.strptime(date,'%Y-%m-%d' )\n","  age.append((x - datetime_object.date()).days)\n","df['age_in_days'] = age"],"metadata":{"id":"qcrC_Xp9bOuH"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_Pa1KAtspe7t","executionInfo":{"status":"ok","timestamp":1652390435827,"user_tz":-330,"elapsed":10,"user":{"displayName":"Isha","userId":"08045007537710183397"}},"colab":{"base_uri":"https://localhost:8080/","height":250},"outputId":"337d01fb-d815-4d71-d4f4-945defec5e2c"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                               title  views release_date  \\\n","0  FB Plus Sale + New 4 Week FB Benchmark â€“ Total...   8090   2022-05-01   \n","1  Lower Body Strength Workout with Glute Activat...  43175   2022-04-25   \n","2  Bodyweight Strength with HIIT Burnout Sets - T...  57174   2022-04-11   \n","3  Lower and Upper Body Mini Strength Complexes w...  39055   2022-03-28   \n","4  Express Total Body Workout: 10 or 15 Minutes Y...  62204   2022-03-07   \n","\n","                                                tags duration  Likes  \\\n","0                                                       10:43    186   \n","1                                                       26:51   1492   \n","2                                                       32:16   1336   \n","3                                                       32:43     -1   \n","4  express workout, quick workout, 10 minute work...    15:10   1869   \n","\n","   age_in_days  \n","0           11  \n","1           17  \n","2           31  \n","3           45  \n","4           66  "],"text/html":["\n","  <div id=\"df-29887a0c-3a6b-4c01-a104-1cb537798061\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>title</th>\n","      <th>views</th>\n","      <th>release_date</th>\n","      <th>tags</th>\n","      <th>duration</th>\n","      <th>Likes</th>\n","      <th>age_in_days</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>FB Plus Sale + New 4 Week FB Benchmark â€“ Total...</td>\n","      <td>8090</td>\n","      <td>2022-05-01</td>\n","      <td></td>\n","      <td>10:43</td>\n","      <td>186</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Lower Body Strength Workout with Glute Activat...</td>\n","      <td>43175</td>\n","      <td>2022-04-25</td>\n","      <td></td>\n","      <td>26:51</td>\n","      <td>1492</td>\n","      <td>17</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Bodyweight Strength with HIIT Burnout Sets - T...</td>\n","      <td>57174</td>\n","      <td>2022-04-11</td>\n","      <td></td>\n","      <td>32:16</td>\n","      <td>1336</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Lower and Upper Body Mini Strength Complexes w...</td>\n","      <td>39055</td>\n","      <td>2022-03-28</td>\n","      <td></td>\n","      <td>32:43</td>\n","      <td>-1</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Express Total Body Workout: 10 or 15 Minutes Y...</td>\n","      <td>62204</td>\n","      <td>2022-03-07</td>\n","      <td>express workout, quick workout, 10 minute work...</td>\n","      <td>15:10</td>\n","      <td>1869</td>\n","      <td>66</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29887a0c-3a6b-4c01-a104-1cb537798061')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-29887a0c-3a6b-4c01-a104-1cb537798061 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-29887a0c-3a6b-4c01-a104-1cb537798061');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"yZeTM_-Bpf24"},"source":["# Step 3 : Save the data in csv format"]},{"cell_type":"code","metadata":{"id":"kkRcDrzLphNf","executionInfo":{"status":"ok","timestamp":1652390438848,"user_tz":-330,"elapsed":382,"user":{"displayName":"Isha","userId":"08045007537710183397"}},"colab":{"base_uri":"https://localhost:8080/","height":17},"outputId":"f9e94079-1886-4c2c-909f-1c104d018bb0"},"source":["df.to_csv(channel_name +'YTData'+'.csv')\n","from google.colab import files\n","files.download(channel_name +'YTData'+'.csv')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_81c8d8e0-6f45-4dbf-9354-02cf90fc3271\", \"FitnessBlenderYTData.csv\", 70133)"]},"metadata":{}}]}]}